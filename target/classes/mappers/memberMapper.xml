<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="com.spring.recipe.mappers.memberMapper">
  
  
  <insert id="insertMember" parameterType="MemberVO">
  	insert into member(member_id, member_pw, member_gender, member_image, member_email)
  				
  				values(#{member_id}, #{member_pw}, #{member_gender}, #{member_image}, #{member_email})
  </insert>
  
  <select id="loginMember" resultType="MemberVO">
  	select * from member where member_id = #{member_id}
  </select>
  
  
  <select id="infoMember" resultType="MemberVO">
  	select * from member where member_id = #{member_id}
  </select>
  
  
  <!-- 중복 검사 -->
  <select id="idChk"  resultType="int">
  	
  	select count(member_id) from member where member_id = #{member_id}
  </select>
  
  <select id="emailChk" resultType="int">
  	select count(member_email) from member where member_email = #{member_email}
  </select>
  <!-- 중복검사 end -->
  
  
  <!-- 아이디 찾기 -->
  <select id="find_Id" resultType="String">
	select member_id from member where member_email = #{member_email}
  </select>
  
  <!-- 비밀번호찾기 위해  조건에 맞는 결과 있는지 확인 -->
  <select id="find_Pw" resultType="int">
	select count(member_pw) from member where member_id = #{member_id} and member_email = #{member_email}  
  </select>
  
  
  <!-- 비밀번호 찾기 결과가 있는경우 비밀번호를 새로 정한다 -->
  <update id="pw_update">
  	update member set member_pw = #{member_pw} where member_id = #{member_id}
  </update>
  
  
  
  
  
  <update id="keepLogin">
  
  	update member set session_key = #{session_key}, session_limit = #{session_limit} where member_id = #{member_id}
  </update>
  
  <select id="checkSessionKey" resultType="MemberVO">
  
  	select * from member where session_key = #{session_key}
  </select>
  
  <update id="modifyMember" parameterType="MemberVO">

	update member set member_image = #{member_image}, member_updatedate = now()  where member_id = #{member_id} 
  </update>
  
  <delete id="deleteMember" parameterType="MemberVO">

	delete from member where member_id = #{member_id}  
  </delete>
  
  
  </mapper>